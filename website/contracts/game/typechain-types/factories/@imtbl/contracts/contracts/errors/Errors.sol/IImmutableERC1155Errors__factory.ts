/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IImmutableERC1155Errors,
  IImmutableERC1155ErrorsInterface,
} from "../../../../../../@imtbl/contracts/contracts/errors/Errors.sol/IImmutableERC1155Errors";

const _abi = [
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "PermitExpired",
    type: "error",
  },
] as const;

export class IImmutableERC1155Errors__factory {
  static readonly abi = _abi;
  static createInterface(): IImmutableERC1155ErrorsInterface {
    return new Interface(_abi) as IImmutableERC1155ErrorsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IImmutableERC1155Errors {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IImmutableERC1155Errors;
  }
}
